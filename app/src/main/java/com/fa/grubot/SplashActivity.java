package com.fa.grubot;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;

import com.couchbase.lite.CouchbaseLiteException;
import com.couchbase.lite.Database;
import com.couchbase.lite.Document;
import com.couchbase.lite.Manager;
import com.couchbase.lite.Query;
import com.couchbase.lite.QueryEnumerator;
import com.couchbase.lite.QueryRow;
import com.couchbase.lite.android.AndroidContext;
import com.couchbase.lite.auth.Authenticator;
import com.couchbase.lite.auth.AuthenticatorFactory;
import com.couchbase.lite.replicator.Replication;
import com.couchbase.lite.support.LazyJsonObject;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class SplashActivity extends AppCompatActivity {
    private Database database;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        loadPreferences();
        startActivity(new Intent(SplashActivity.this, MainActivity.class));
        setupDB();
        SplashActivity.this.finish();

        final Query queryPlaces = database.getView(PLACES_VIEW).createQuery();
        database.addChangeListener(event -> {
            if (event.isExternal()) {
                QueryEnumerator rows = null;
                try {
                    rows = queryPlaces.run();
                } catch (CouchbaseLiteException e) {
                    e.printStackTrace();
                }
                List<Object> places = new ArrayList<>();
                for (Iterator<QueryRow> it = rows; it.hasNext(); ) {
                    QueryRow row = it.next();
                    Log.d("", row.getValue().toString());
                    Map<String, Object> properties = database.getDocument(row.getDocumentId()).getProperties();
                    places.add(new Place((LazyJsonObject) row.getValue()));
                }
                adapter.dataSet = places;
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        recyclerView.getAdapter().notifyDataSetChanged();
                    }
                });
            }
        });
    }

    private void loadPreferences() {
        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);

        App.INSTANCE.setAnimationsEnabled(prefs.getBoolean("animationsSwitch", false));
        App.INSTANCE.setBackstackEnabled(prefs.getBoolean("backstackSwitch", false));
        App.INSTANCE.setSlidrEnabled(prefs.getBoolean("slidrSwitch", true));
    }

    private void setupDB() {
        // Create a manager
        Manager manager = null;
        try {
            manager = new Manager(new AndroidContext(getApplicationContext()), Manager.DEFAULT_OPTIONS);
        } catch (IOException e) {
            e.printStackTrace();
        }
        // Create or open the database named app
        database = null;
        try {
            database = manager.getDatabase("app");
        } catch (CouchbaseLiteException e) {
            e.printStackTrace();
        }
        // The properties that will be saved on the document
        Map<String, Object> properties = new HashMap<String, Object>();
        properties.put("title", "Couchbase Mobile");
        properties.put("sdk", "Android");
        // Create a new document
        Document document = database.createDocument();
        // Save the document to the database
        try {
            document.putProperties(properties);
        } catch (CouchbaseLiteException e) {
            e.printStackTrace();
        }
        // Log the document ID (generated by the database)
        // and properties
        Log.d("app", String.format("Document ID :: %s", document.getId()));
        Log.d("app", String.format("Learning %s with %s", (String) document.getProperty("title"), (String) document.getProperty("sdk")));

        // Create replicators to push & pull changes to & from Sync Gateway.
        URL url = null;
        try {
            url = new URL("http://37.230.117.36:4984/grubot/");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        Replication push = database.createPushReplication(url);
        Replication pull = database.createPullReplication(url);

        Authenticator authenticator = AuthenticatorFactory.createBasicAuthenticator("android", "android");
        push.setAuthenticator(authenticator);
        pull.setAuthenticator(authenticator);

        push.setContinuous(true);
        pull.setContinuous(true);

        // Start replicators
        push.start();
        pull.start();
    }
}
